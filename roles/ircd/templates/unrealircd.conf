/* Configuration file for UnrealIRCd 4.0
 *
 * Simply copy this file to your conf/ directory, call it
 * 'unrealircd.conf' and walk through it line by line (edit it!)
 *
 * Important: All lines, except the opening { line, end with an ;
 * including };. This is very important, if you miss a ; somewhere then
 * the configuration file parser will complain and your file will not
 * be processed correctly!
 * If this is your first experience with an UnrealIRCd configuration
 * file then we really recommend you to read a little about the syntax,
 * this only takes a few minutes and will help you a lot:
 * https://www.unrealircd.org/docs/Configuration#Configuration_file_syntax
 *
 * UnrealIRCd 4 documentation (very extensive!):
 * https://www.unrealircd.org/docs/UnrealIRCd_4_documentation
 *
 * Frequently Asked Questions:
 * https://www.unrealircd.org/docs/FAQ
 *
 */

/* This is a comment, all text here is ignored (comment type #1) */
// This is also a comment, this line is ignored (comment type #2)
# This is also a comment, again this line is ignored (comment type #3)

/* UnrealIRCd makes heavy use of modules. Modules allow you to completely
 * customize the featureset you wish to enable in UnrealIRCd.
 * See: https://www.unrealircd.org/docs/Modules
 *
 * By using the include below we instruct the IRCd to read the file
 * 'modules.default.conf' which will load more than 150 modules
 * shipped with UnrealIRCd. In other words: this will simply load
 * all the available features in UnrealIRCd.
 * If you are setting up UnrealIRCd for the first time we suggest you
 * use this. Then, when everything is up and running you can come
 * back later to customize the list (if you wish).
 */
include "modules.default.conf";

/* Now let's include some other files as well:
 * - help/help.conf for our on-IRC /HELPOP system
 * - badwords.conf for channel and user mode +G
 * - spamfilter.conf as an example for spamfilter usage
 * - operclass.default.conf contains some good operclasses which
 *   you can use in your oper blocks.
 */
include "help/help.conf";
include "badwords.conf";
include "spamfilter.conf";
include "operclass.default.conf";

/* This is the me { } block which basically says who we are.
 * It defines our server name, some information line and an unique "sid".
 * The server id (sid) must start with a digit followed by two digits or
 * letters. The sid must be unique for your IRC network (each server should
 * have it's own sid).
 */
me {
    name "{{ ircd_domain }}";
    info "{{ ircd_info }}";
    sid "001";
};

/* The admin { } block defines what users will see if they type /ADMIN.
 * It normally contains information on how to contact the administrator.
 */
admin {
    "{{ ircd_admin_name }}";
    "{{ ircd_admin_nick }}";
    "{{ ircd_admin_email }}";
};

/* Clients and servers are put in class { } blocks, we define them here.
 * Class blocks consist of the following items:
 * - pingfreq: how often to ping a user / server (in seconds)
 * - connfreq: how often we try to connect to this server (in seconds)
 * - sendq: the maximum queue size for a connection
 * - recvq: maximum receive queue from a connection (flood control)
 */

/* Client class with good defaults */
class clients
{
    pingfreq 90;
    maxclients 750;
    sendq 200k;
    recvq 8000;
};

/* Special class for IRCOps with higher limits */
class opers
{
    pingfreq 90;
    maxclients 50;
    sendq 1M;
    recvq 8000;
};

/* Server class with good defaults */
class servers
{
    pingfreq 60;
    connfreq 45; /* try to connect every 45 seconds */
    maxclients 10; /* max servers */
    sendq 5M;
};

/* Allow blocks define which clients may connect to this server.
 * This allows you to add a server password or restrict the server to
 * specific IP's only. You also configure the maximum connections
 * allowed per IP here.
 * See also: https://www.unrealircd.org/docs/Allow_block
 */

/* Allow everyone in, but only 3 connections per IP */
allow {
    ip *@*;
    class clients;
{% if ircd_server_password %}
    password "{{ ircd_server_password }}";
{% endif %}
    maxperip 3;
};

/* Example of a special allow block on a specific IP:
 * Requires users on that IP to connect with a password. If the password
 * is correct then it permits 20 connections on that IP.
 */
#allow {
#    ip *@192.0.2.1;
#    class clients;
#    password "{{ ircd_server_password }}";
#    maxperip 20;
#};

{% for channel in ircd_channels %}
allow channel {
    channel "{{ channel }}";
    class "clients";
};

{% endfor %}
{% if ircd_fixed_channels %}
deny channel {
    channel "#*";
    reason "You cannot create channels";
    class "clients";
};

{% endif %}

/* Oper blocks define your IRC Operators.
 * IRC Operators are people who have "extra rights" compared to others,
 * for example they may /KILL other people, initiate server linking,
 * /JOIN channels even though they are banned, etc.
 * See also: https://www.unrealircd.org/docs/Oper_block
 */

{% for op in ircd_operators %}
oper {{ op.nick }} {
    class opers;
    mask *;
    password "{{ op.password }}";
    /* Oper permissions are defined in an 'operclass' block.
     * See https://www.unrealircd.org/docs/Operclass_block
     * UnrealIRCd ships with a number of default blocks, see
     * the article for a full list. We choose 'netadmin' here.
     */
    operclass {{ op.operclass }};
    swhois "is a {{ op.operclass }}";
    vhost {{ op.operclass }}.{{ ircd_domain }};
};

{% endfor %}

/* Listen blocks define the ports where the server should listen on.
 * In other words: the ports that clients and servers may use to
 * connect to this server.
 *
 * Syntax:
 * listen {
 * {
 *   ip <ip>;
 *   port <port>;
 *   options {
 *     <options....>;
 *   };
 * };
 */

/* Standard IRC port */
listen {
    ip *;
    port {{ ircd_port }};
};

/* Standard IRC SSL/TLS port */
listen {
    ip *;
    port {{ ircd_port_ssl }};
    options { ssl; };
};

/* Here you can add a password for the IRCOp-only /DIE and /RESTART commands.
 * This is mainly meant to provide a little protection against accidental
 * restarts and server kills.
 */
drpass {
    restart "restart";
    die "die";
};

/* The log block defines what should be logged and to what file.
 * See also https://www.unrealircd.org/docs/Log_block
 */

/* This is a good default, it logs almost everything */
log "ircd.log" {
    flags {
        oper;
        connects;
        server-connects;
        kills;
        errors;
        sadmin-commands;
        chg-commands;
        oper-override;
        tkl;
        spamfilter;
    };
};

/* With "aliases" you can create an alias like /SOMETHING to send a message to
 * some user or bot. They are usually used for services.
 *
 * We have a number of pre-set alias files, check out the alias/ directory.
 * As an example, here we include all aliases used for anope services.
 */
include "aliases/anope.conf";

/* Ban nick names so they cannot be used by regular users */
ban nick {
    mask "*C*h*a*n*S*e*r*v*";
    reason "Reserved for Services";
};


/* You can include other configuration files */
/* include "klines.conf"; */

/* Network configuration */
set {
    network-name        "{{ ircd_network }}";
    default-server      "{{ ircd_domain }}";
    # services-server     "services.mynet.org";
    # stats-server        "stats.mynet.org";
    help-channel        "{{ ircd_channels[0] }}";
    hiddenhost-prefix   "Clk";
    prefix-quit         "Quit";
{% if ircd_channels_autojoin %}
    auto-join           "{{ ircd_channels_autojoin | join(',') }}";
{% endif %}

    /* Cloak keys should be the same at all servers on the network.
     * They are used for generating masked hosts and should be kept secret.
     * The keys should be 3 random strings of 50-100 characters
     * and must consist of lowcase (a-z), upcase (A-Z) and digits (0-9).
     * HINT: On *NIX, you can run './unrealircd gencloak' in your shell to let
     *       UnrealIRCd generate 3 random strings for you.
     */
    # TODO: auto-generate unique keys
    cloak-keys {
        "W7yjI5PouvyF0EaKikk1j27748JY6B1fuF6TVaADe537qb0evK7UUWm";
        "7VQ0Xu01sAdh2pRjBBbCkXCF26JI03tsDrnvNR6c8kX7IldJD2hCN3WHfr1";
        "y7A2SkV1bJxijA0s38kF0T8TVt8V22X3uu3hqIR3vET5n2cYs2U86h6bjN";
    };
};


/* Server specific configuration */

set {
    kline-address "{{ ircd_admin_email }}"; /* e-mail or URL shown when a user is banned */
    modes-on-connect "+ixw"; /* when users connect, they will get these user modes */
    modes-on-oper     "+xwgs"; /* when someone becomes IRCOp they'll get these modes */
    oper-auto-join "#opers"; /* IRCOps are auto-joined to this channel */
    options {
        hide-ulines; /* hide U-lines in /MAP and /LINKS */
        show-connect-info; /* show "looking up your hostname" messages on connect */
    };

    maxchannelsperuser 25; /* maximum number of channels a user may /JOIN */

    /* The minimum time a user must be connected before being allowed to
     * use a QUIT message. This will hopefully help stop spam.
     */
    anti-spam-quit-message-time 10s;

    /* Or simply set a static quit, meaning any /QUIT reason is ignored */
    /* static-quit "Client quit";    */

    /* static-part does the same for /PART */
    /* static-part yes; */

    /* Which /STATS to restrict to opers only. We suggest to leave it to * (ALL) */
    oper-only-stats "*";

    /* Anti flood protection */
    anti-flood {
        nick-flood 3:60;    /* 3 nick changes per 60 seconds (the default) */
        connect-flood 3:60; /* 3 connection attempts per 60 seconds (the default) */
        away-flood 4:120;    /* 4 times per 2 minutes you may use /AWAY (default) */
    };

    /* Settings for spam filter */
    spamfilter {
        ban-time 1d; /* default duration of a *LINE ban set by spamfilter */
        ban-reason "Spam/Advertising"; /* default reason */
        virus-help-channel "#help"; /* channel to use for 'viruschan' action */
        /* except "#help"; channel to exempt from Spamfilter */
    };
};


/*
link {{ ircd_domain }}
{
    username ircd;
    hostname 127.0.0.1;
    port *;
    bind-ip 127.0.0.1;
    password-connect "{{ ircd_services_password }}";
    password-receive "{{ ircd_services_password }}";
    class servers;
};

ulines {
    {{ ircd_domain }};
};
*/


/*
 * Problems or need more help?
 * 1) https://www.unrealircd.org/docs/UnrealIRCd_4_documentation
 * 2) https://www.unrealircd.org/docs/FAQ <- answers 80% of your questions!
 * 3) If you are still having problems then you can get support:
 *    - Forums: https://forums.unrealircd.org/
 *    - IRC: irc.unrealircd.org / #unreal-support
 *    Note that we require you to read the documentation and FAQ first!
 */
